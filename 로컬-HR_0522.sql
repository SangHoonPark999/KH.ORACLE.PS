--EMPLOYEES 이름과 직급을 출력하시오. [ELLEN 님의 직급은 매니저 입니다.]
SELECT first_name ||'님의 직급은'|| JOB_ID || '입니다.' AS MESSAGE FROM EMPLOYEES;
--EMPLOYEES 직급을 중복하지말고 출력하시오.
SELECT DISTINCT JOB_ID FROM employees;
SELECT JOB_ID, COUNT(*) 직급별카운트 FROM employees GROUP BY JOB_ID HAVING COUNT(*) >=20 ;
--NULL은 비교대상이 되지 않는다
SELECT EMLOYEE_ID, FIRST_NAME, COMMISSION_PCT, JOB_ID FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL;
--직급을 기준으로 내림차순 정렬, 연봉은 오름차순 2차 정렬 이상 처리된다.
SELECT JOB_ID, SALARY FROM EMPLOYEES ORDER BY JOB_ID DESC, SALARY ASC;


--가상테이블 => 진짜 테이블(인스턴스가 1개, 컬럼명 1개 있는 테이블)
SELECT 24+NULL+34 AS RESULT FROM departments;
DESC DUAL;
SELECT 24+35 AS RESULT FROM DUAL;

--GROUP BY : 2개이상이 나와야 그룹의 대상이 된다.
--부서별 총 급여를 구하시오.
--SELECT * FROM GROUP BY HAVING WHERE ORDER BY (ASC/DESC) LIMIT
SELECT DEPARTMENT_ID, SUM(SALARY) FROM EMPLOYEES
GROUP BY DEPARTMENT_ID HAVING SUM(SALARY) >= 50000 AND DEPARTMENT_ID =100;
SELECT * FROM EMPLOYEES;
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, COMMISSION_PCT FROM EMPLOYEES WHERE COMMISSION_PCT IN(0.3, 0.05, 0.1);
SELECT EMPLOYEE_ID, FIRST_NAME FROM EMPLOYEES WHERE NOT FIRST_NAME LIKE '%a%' AND NOT FIRST_NAME LIKE 'A%'; 




